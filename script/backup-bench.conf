#!/usr/bin/env bash

#### backup-bench.sh configuration file

BACKUP_SOFTWARES=(bupstash borg borg_beta kopia restic rustic duplicacy)

CSV_RESULT_FILE="/var/log/${PROGRAM}.results.csv"

#### SOURCE SETTINGS

# User on source system that will execute backup tools
SOURCE_USER=root
SOURCE_USER_HOMEDIR=$(eval echo ~${SOURCE_USER})

SOURCE_FQDN="source.example.tld" # FQDN of source server so target can upload ssh keys, password will be asked when --setup-target is executed
SOURCE_SSH_PORT="22"

# git dataset (this dataset will be downloaded and used as primary test dataset)
GIT_DATASET_REPOSITORY="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git"
GIT_TAGS=(v5.19 v5.18 v4.18 v3.10)  # List of tags to backup
GIT_ROOT_DIRECTORY="linux"  # Name of the git repo directory

# Where source dataset is stored (when using git, includes git root directory)
BACKUP_ROOT="/opt/backup_test/linux"

# alternative (non-git) dataset, can be pointed to big files
#BACKUP_ROOT="/data/backups"

# Directory where to restore data on source system, make sure you have enough disk space
RESTORE_DIR=/tmp/backup-bench-restore


#### TARGET SETTINGS

TARGET_ROOT=/opt/backup-bench-repos # Root of target repositories, make sure you have enough disk space
HAVE_ZFS=false # Disable to ignore zfs setup

#### REMOTE TARGET SETTINGS

# Additional SSH tuning
SSH_OPTS="-o Compression=no -c chacha20-poly1305@openssh.com -x -T"

REMOTE_TARGET_FQDN="target.example.tld"  # FQDN of target server so source can upload data to
REMOTE_TARGET_SSH_PORT="22"

# This runner allows to connect from source to target as root in order to clear / repos
REMOTE_SSH_RUNNER="ssh -i ${SOURCE_USER_HOMEDIR}/.ssh/backup-bench.key -p ${REMOTE_TARGET_SSH_PORT} $SSH_OPTS -o StrictHostKeyChecking=accept-new root@${REMOTE_TARGET_FQDN}"

# BORG SPECIFIC SETTINGS
BORG_STABLE_REPO_LOCAL="${TARGET_ROOT}/borg/data"
BORG_BETA_REPO_LOCAL="${TARGET_ROOT}/borg_beta/data"
BORG_STABLE_REPO_REMOTE="borg_user@${REMOTE_TARGET_FQDN}:${TARGET_ROOT}/borg/data"
BORG_BETA_REPO_REMOTE="ssh://borg_beta_user@${REMOTE_TARGET_FQDN}${TARGET_ROOT}/borg_beta/data"
export BORG_PASSPHRASE=SOMEPASSWORD

# BUPSTASH SPECIFIC SETTINGS
BUPSTASH_REPOSITORY_LOCAL="${TARGET_ROOT}/bupstash/data"
BUPSTASH_REPOSITORY_COMMAND_REMOTE="ssh -i ${SOURCE_USER_HOMEDIR}/.ssh/bupstash.key -p ${REMOTE_TARGET_SSH_PORT} $SSH_OPTS -o StrictHostKeyChecking=accept-new -T bupstash_user@${REMOTE_TARGET_FQDN}"
export BUPSTASH_KEY="${SOURCE_USER_HOMEDIR}/bupstash.store.key"

# KOPIA SPECIFIC SETTINGS
KOPIA_USE_HTTP=false
KOPIA_HTTP_PORT=37890
export KOPIA_PASSWORD=SOMEPASSWORD
KOPIA_HTTP_USERNAME=backup-bench
KOPIA_HTTP_PASSWORD=SOMEHTTPPASSWORD
export KOPIA_SERVER_CONTROL_USER=masteruser                     # This allows to interact with kopia server (for server refresh)
export KOPIA_SERVER_CONTROL_PASSWORD=SOMEMASTERPASSWORD

# RESTIC SPECIFC SETTINGS
export RESTIC_PASSWORD=SOMEPASSWORD
RESTIC_USE_HTTP=false
RESTIC_HTTP_PORT=37891

# RUSTIC SPECIFC SETTINGS
export RUSTIC_PASSWORD=SOMEPASSWORD
RUSTIC_USE_HTTP=false
RUSTIC_HTTP_PORT=37892

# DUPLICACY_SPECIFIC_SETTINGS
export DUPLICACY_PASSWORD=SOMEPASSWORD
export DUPLICACY_SSH_KEY_FILE=${SOURCE_USER_HOMEDIR}/.ssh/duplicacy.key
